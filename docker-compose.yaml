version: '3.9'
services:
  web:
    container_name: web
    image: ferdinand:api
    build: 
      context: .
      target: release-api
    environment:
      - ASPNETCORE_URLS=http://+:5000
      - ASPNETCORE_ENVIRONMENT=Development
      - CONNECTIONSTRINGS__POSTGRES
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
  jobs:
    container_name: jobs
    image: ferdinand:jobs
    build:
      context: .
      target: release-jobs
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
  migrations:
    container_name: migrations
    image: ferdinand:migrations
    build: 
      context: .
      target: release-migrations
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      postgres:
        condition: service_healthy
  postgres:
    container_name: postgres
    image: postgres:15.1
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_USER} -U $${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ${FERDINAND_DOCKER_VOLUMES_ROOT}/data/postgres:/var/lib/postgresql/data
